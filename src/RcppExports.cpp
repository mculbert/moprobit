// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// internal_rCIW
List internal_rCIW(double nu, NumericMatrix S, LogicalVector fix, double eps);
RcppExport SEXP _moprobit_internal_rCIW(SEXP nuSEXP, SEXP SSEXP, SEXP fixSEXP, SEXP epsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type S(SSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type fix(fixSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    rcpp_result_gen = Rcpp::wrap(internal_rCIW(nu, S, fix, eps));
    return rcpp_result_gen;
END_RCPP
}
// internal_iter
List internal_iter(const List prior, int iters, int TMN_iters, bool fixSigma, bool fixCrossBlockCov, double eps);
RcppExport SEXP _moprobit_internal_iter(SEXP priorSEXP, SEXP itersSEXP, SEXP TMN_itersSEXP, SEXP fixSigmaSEXP, SEXP fixCrossBlockCovSEXP, SEXP epsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const List >::type prior(priorSEXP);
    Rcpp::traits::input_parameter< int >::type iters(itersSEXP);
    Rcpp::traits::input_parameter< int >::type TMN_iters(TMN_itersSEXP);
    Rcpp::traits::input_parameter< bool >::type fixSigma(fixSigmaSEXP);
    Rcpp::traits::input_parameter< bool >::type fixCrossBlockCov(fixCrossBlockCovSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    rcpp_result_gen = Rcpp::wrap(internal_iter(prior, iters, TMN_iters, fixSigma, fixCrossBlockCov, eps));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_moprobit_internal_rCIW", (DL_FUNC) &_moprobit_internal_rCIW, 4},
    {"_moprobit_internal_iter", (DL_FUNC) &_moprobit_internal_iter, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_moprobit(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
